import asyncio
import random
from aiogram import Bot, Dispatcher, F, Router
from aiogram.filters import Command
from aiogram.types import (
    Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove,
    InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
)
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties

API_TOKEN = '8124119601:AAEgnFwCalzIKU15uHpIyWlCRbu4wvNEAUw'

JOBS = [
    "–¢–∞–∫—Å–∏—Å—Ç", "–†—ã–±–æ–ª–æ–≤", "–ú–µ—Ö–∞–Ω–∏–∫", "–†–∞–±–æ—Ç–Ω–∏–∫ –Ω–∞ —Ñ–µ—Ä–º–µ", "–†–∞–±–æ—Ç–Ω–∏–∫ –Ω–∞ –ó–∞–≤–æ–¥–µ", "–í–æ–¥–æ–ª–∞–∑",
    "–≠–ª–µ–∫—Ç—Ä–∏–∫", "–ì–∞–∑–æ–≤—â–∏–∫", "–ö—Ä—É–ø—å–µ", "–ò–Ω–∫–∞—Å—Å–∞—Ç–æ—Ä", "–í–æ–¥–∏—Ç–µ–ª—å –∞–≤—Ç–æ–±—É—Å–∞", "–ö–ª–∞–¥–æ–∏—Å–∫–∞—Ç–µ–ª—å",
    "–û—Ö–æ—Ç–Ω–∏–∫", "–ö—É—Ä—å–µ—Ä", "–°—Ç—Ä–æ–∏—Ç–µ–ª—å", "–î–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫"
]
ORGS = [
    "–§–°–ë", "–ì–ò–ë–î–î", "–£–ú–í–î", "–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "–ë–æ–ª—å–Ω–∏—Ü–∞", "–°–ú–ò", "–§–°–ò–ù", "–í–æ–∏–Ω—Å–∫–∞—è —á–∞—Å—Ç—å"
]
CHARACTERS = [
    "–°–ø–æ–∫–æ–π–Ω—ã–π", "–°–¥–µ—Ä–∂–∞–Ω–Ω—ã–π", "–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π", "–†–µ—à–∏—Ç–µ–ª—å–Ω—ã–π", "–ù–∞—Å—Ç–æ–π—á–∏–≤—ã–π", "–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π",
    "–õ–µ–≥–∫–æ–º—ã—Å–ª–µ–Ω–Ω—ã–π", "–î–æ–±—Ä–æ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–π", "–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π", "–•–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω—ã–π", "–ß–µ—Å—Ç–Ω—ã–π", "–¶–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π",
    "–î–æ–±—Ä—ã–π", "–ó–ª–æ–ø–∞–º—è—Ç–Ω—ã–π", "–£–ø—Ä—è–º—ã–π", "–û—Ç–∫—Ä—ã—Ç—ã–π", "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π", "–¢–µ—Ä–ø–µ–ª–∏–≤—ã–π"
]
HOBBIES = [
    "–°—Ç—Ä–µ–ª—å–±–∞ –∏–∑ –ª—É–∫–∞", "–ì–æ—Ç–æ–≤–∫–∞ –±–ª—é–¥", "–ï–∑–¥–∞ –Ω–∞ –≤–µ–ª–æ—Å–∏–ø–µ–¥–µ", "–°—Ç—Ä–µ–ª—å–±–∞ –≤ —Ç–∏—Ä–µ", "–í–µ—Ä—Ö–æ–≤–∞—è –µ–∑–¥–∞",
    "–ü–ª–∞–≤–∞–Ω–∏–µ", "–ö–∞—Ç–∞–Ω–∏–µ –Ω–∞ –∫–æ–Ω—å–∫–∞—Ö –∏ —Ä–æ–ª–∏–∫–∞—Ö", "–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥", "–°–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è",
    "–†—ã–±–∞–ª–∫–∞", "–§—É—Ç–±–æ–ª", "–í–æ–ª–µ–π–±–æ–ª", "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –≤–µ—â–µ–π", "–¢—É—Ä–∏–∑–º"
]
PLACES = [
    "–ê—Ä–∑–∞–º–∞—Å", "–ë–∞—Ç—ã—Ä–µ–≤–æ", "–ì–∞—Ä–µ–ª—å", "–ì–æ—Ä–∫–∏", "–†—É–±–ª–µ–≤–∫–∞", "–Æ–∂–Ω—ã–π", "–ù–∏–∂–µ–≥–æ—Ä–æ–¥—Å–∫", "–ë—É—Å–∞–µ–≤–æ", "–ö–æ—Ä—è–∫–∏–Ω–æ", "–ï–≥–æ—Ä–æ–≤–∫–∞"
]
FAMILY_SAMPLES = [
    "–í—ã—Ä–æ—Å –≤ –∫—Ä–µ–ø–∫–æ–π –∏ –¥—Ä—É–∂–Ω–æ–π —Å–µ–º—å–µ. –û—Ç–µ—Ü ‚Äì –≤–æ–¥–∏—Ç–µ–ª—å, –º–∞—Ç—å ‚Äì –ø–æ–≤–∞—Ä, –µ—Å—Ç—å –º–ª–∞–¥—à–∏–π –±—Ä–∞—Ç –∏ —Å–µ—Å—Ç—Ä–∞.",
    "–í–æ—Å–ø–∏—Ç—ã–≤–∞–ª—Å—è –º–∞—Ç–µ—Ä—å—é, –∫–æ—Ç–æ—Ä–∞—è –≤—Å—é –∂–∏–∑–Ω—å —Ä–∞–±–æ—Ç–∞–ª–∞ –Ω–∞ –∑–∞–≤–æ–¥–µ, –æ—Ç–µ—Ü —É—à—ë–ª –∏–∑ —Å–µ–º—å–∏ —Ä–∞–Ω–æ.",
    "–†–æ–¥–∏—Ç–µ–ª–∏ ‚Äì –∏–Ω–∂–µ–Ω–µ—Ä—ã, —Å –¥–µ—Ç—Å—Ç–≤–∞ –ø—Ä–∏—É—á–∞–ª–∏ –∫ —Ç—Ä—É–¥—É. –ï—Å—Ç—å –º–ª–∞–¥—à–∏–π –±—Ä–∞—Ç.",
    "–ñ–∏–≤—É —Å –∂–µ–Ω–æ–π –ï–∫–∞—Ç–µ—Ä–∏–Ω–æ–π –∏ –¥–≤—É–º—è –¥–µ—Ç—å–º–∏, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã.",
    "–°–µ–º—å—è –Ω–µ–±–æ–ª—å—à–∞—è, –Ω–æ –¥—Ä—É–∂–Ω–∞—è ‚Äì –º–∞–º–∞, –ø–∞–ø–∞ –∏ –º–ª–∞–¥—à–∏–π –±—Ä–∞—Ç."
]
EDUCATION_SAMPLES = [
    "–û–∫–æ–Ω—á–∏–ª –∫–æ–ª–ª–µ–¥–∂ –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ¬´—Ç–µ—Ö–Ω–∏–∫-–º–µ—Ö–∞–Ω–∏–∫¬ª.",
    "–£—á–∏–ª—Å—è –≤ –ø–æ–ª–∏—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–º –∫–æ–ª–ª–µ–¥–∂–µ –Ω–∞ –∞–≤—Ç–æ–º–µ—Ö–∞–Ω–∏–∫–∞.",
    "–ü–æ–ª—É—á–∏–ª —Å—Ä–µ–¥–Ω–µ–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ, –≤—ã–±—Ä–∞–ª –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.",
    "–ó–∞–∫–æ–Ω—á–∏–ª —à–∫–æ–ª—É —Å —É–∫–ª–æ–Ω–æ–º –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏."
]
CHILDHOOD_SAMPLES = [
    "–° –¥–µ—Ç—Å—Ç–≤–∞ –ø–æ–º–æ–≥–∞–ª –æ—Ç—Ü—É –≤ –≥–∞—Ä–∞–∂–µ, –Ω–∞—É—á–∏–ª—Å—è —Ä–∞–∑–±–∏—Ä–∞—Ç—å –∏ —Å–æ–±–∏—Ä–∞—Ç—å —Ç–µ—Ö–Ω–∏–∫—É.",
    "–î–µ—Ç—Å—Ç–≤–æ –ø—Ä–æ—à–ª–æ –≤ –æ–±—ã—á–Ω–æ–π —Å–µ–º—å–µ, –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–æ–¥–∏–ª –Ω–∞ —É–ª–∏—Ü–µ, –∑–∞–Ω–∏–º–∞–ª—Å—è —Å–ø–æ—Ä—Ç–æ–º.",
    "–ß–∞—Å—Ç–æ –ø—Ä–æ–≤–æ–¥–∏–ª –≤—Ä–µ–º—è –Ω–∞ –∞–≤—Ç–æ—Å—Ç–æ—è–Ω–∫–∞—Ö, —É–≤–ª–µ–∫–∞–ª—Å—è –º–∞—à–∏–Ω–∞–º–∏ –∏ —Ç–µ—Ö–Ω–∏–∫–æ–π.",
    "–í —à–∫–æ–ª–µ —É—á–∏–ª—Å—è —Å—Ä–µ–¥–Ω–µ, –Ω–æ –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥–∞–ª —Å–µ–º—å–µ –ø–æ —Ö–æ–∑—è–π—Å—Ç–≤—É.",
    "–° —Ä–∞–Ω–Ω–∏—Ö –ª–µ—Ç —Ä–∞–±–æ—Ç–∞–ª, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Å–µ–º—å–µ, –º—ã–ª –º–∞—à–∏–Ω—ã, —Ç–∞—Å–∫–∞–ª —Å—É–º–∫–∏ —Å —Ä—ã–Ω–∫–∞."
]
YOUTH_SAMPLES = [
    "–í —é–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–ª –ø–æ —Ä–∞–∑–Ω—ã–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º ‚Äì –∫—É—Ä—å–µ—Ä, –≤–æ–¥–∏—Ç–µ–ª—å, –º–µ—Ö–∞–Ω–∏–∫.",
    "–ü—Ä–æ–±–æ–≤–∞–ª —Å–µ–±—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞—Ö ‚Äì —Ç–∞–∫—Å–∏—Å—Ç, –∫–ª–∞–¥–æ–∏—Å–∫–∞—Ç–µ–ª—å, –≤–æ–¥–æ–ª–∞–∑.",
    "–£—á–∏–ª—Å—è –∏ —Ä–∞–±–æ—Ç–∞–ª –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, —á—Ç–æ–±—ã –Ω–∞–∫–æ–ø–∏—Ç—å –Ω–∞ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≤—Ç–æ–º–æ–±–∏–ª—å.",
    "–° —é–Ω–æ—Å—Ç–∏ –º–µ—á—Ç–∞–ª –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –±–∏–∑–Ω–µ—Å –∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–ª –Ω–∞–≤—ã–∫–∏.",
    "–°—Ç–∞–ª —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º, –Ω–∞—á–∞–ª –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏."
]
ADULT_LIFE_SAMPLES = [
    "–°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞—é –≤ –∫—Ä—É–ø–Ω–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, —Å–æ–≤–º–µ—â–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π.",
    "–†–∞–±–æ—Ç–∞—é –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ —Ç–µ—Ö–æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è, –ø–ª–∞–Ω–∏—Ä—É—é –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –∞–≤—Ç–æ—Å–µ—Ä–≤–∏—Å.",
    "–ó–∞–Ω–∏–º–∞—é—Å—å –ø–µ—Ä–µ–≤–æ–∑–∫–∞–º–∏ —Ü–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑–æ–≤, –∏–∑–≤–µ—Å—Ç–µ–Ω —Å–≤–æ–µ–π –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç—å—é.",
    "–°—Ç–∞–ª –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º –≤ –∞–≤—Ç–æ—Å–∞–ª–æ–Ω–µ, –∏–∑—É—á–∞—é –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ.",
    "–ü—Ä–æ–¥–æ–ª–∂–∞—é –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è, –∑–∞–Ω–∏–º–∞—é—Å—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ–º."
]
APPEARANCE_SAMPLES = [
    "–†–æ—Å—Ç 178 —Å–º, —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ, –∫–∞—Ä–∏–µ –≥–ª–∞–∑–∞, –∫–æ—Ä–æ—Ç–∫–∏–µ —Ç—ë–º–Ω—ã–µ –≤–æ–ª–æ—Å—ã.",
    "–•—É–¥–æ—â–∞–≤—ã–π, –Ω–æ –≤—ã–Ω–æ—Å–ª–∏–≤—ã–π, –≤–æ–ª–æ—Å—ã —Ä—É—Å—ã–µ, –≥–ª–∞–∑–∞ —Å–µ—Ä—ã–µ, –≤—Å–µ–≥–¥–∞ –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è –æ–¥–µ–∂–¥–∞.",
    "–°—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ—Å—Ç–∞, –∫—Ä–µ–ø–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞ –ª–∏—Ü–µ –∑–∞–º–µ—Ç–Ω—ã–π —à—Ä–∞–º.",
    "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π –≤–∑–≥–ª—è–¥, —Ç—ë–º–Ω—ã–µ –≤–æ–ª–æ—Å—ã, –Ω–∞ –ø–ª–µ—á–µ —Ç–∞—Ç—É–∏—Ä–æ–≤–∫–∞.",
    "–ù–∏—á–µ–º –Ω–µ –ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –≤–Ω–µ—à–Ω–æ—Å—Ç—å, —á—Ç–æ —Ç–æ–ª—å–∫–æ –ø–æ–º–æ–≥–∞–µ—Ç –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–º."
]

BIO_TEMPLATES = {
    "Red": (
        "<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {name} {surname}\n"
        "<b>–ü–æ–ª:</b> {gender}\n"
        "<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}\n"
        "<b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b> {nationality}\n"
        "<b>–°–µ–º—å—è:</b> {family}\n"
        "<b>–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {place_birth}\n"
        "<b>–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:</b> {place_live}\n"
        "<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {education}\n"
        "<b>–†–∞–±–æ—Ç–∞:</b> {job} ({org})\n"
        "<b>–í–Ω–µ—à–Ω–æ—Å—Ç—å:</b> {appearance}\n"
        "<b>–•–∞—Ä–∞–∫—Ç–µ—Ä:</b> {character}\n"
        "<b>–•–æ–±–±–∏:</b> {hobby}\n"
        "<b>–î–µ—Ç—Å—Ç–≤–æ:</b> {childhood}\n"
        "<b>–Æ–Ω–æ—Å—Ç—å:</b> {youth}\n"
        "<b>–í–∑—Ä–æ—Å–ª–∞—è –∂–∏–∑–Ω—å:</b> {adultlife}\n"
    ),
    "Blue": (
        "<b>–ò–º—è:</b> {name}\n"
        "<b>–§–∞–º–∏–ª–∏—è:</b> {surname}\n"
        "<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}\n"
        "<b>–ü–æ–ª:</b> {gender}\n"
        "<b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b> {nationality}\n"
        "<b>–°–µ–º—å—è:</b> {family}\n"
        "<b>–ì–æ—Ä–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {place_birth}\n"
        "<b>–ì–æ—Ä–æ–¥ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:</b> {place_live}\n"
        "<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {education}\n"
        "<b>–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:</b> {job}\n"
        "<b>–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è:</b> {org}\n"
        "<b>–û–ø–∏—Å–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏:</b> {appearance}\n"
        "<b>–ß–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:</b> {character}\n"
        "<b>–•–æ–±–±–∏:</b> {hobby}\n"
        "<b>–î–µ—Ç—Å–∫–∏–µ –≥–æ–¥—ã:</b> {childhood}\n"
        "<b>–Æ–Ω–æ—Å—Ç—å:</b> {youth}\n"
        "<b>–í–∑—Ä–æ—Å–ª–∞—è –∂–∏–∑–Ω—å:</b> {adultlife}\n"
    ),
    "Orange": (
        "üë§ <b>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>\n"
        "–ò–º—è: {name} {surname}\n"
        "–í–æ–∑—Ä–∞—Å—Ç: {age} | –ü–æ–ª: {gender} | –ù–∞—Ü.: {nationality}\n"
        "–°–µ–º—å—è: {family}\n"
        "–†–æ–¥–æ–º –∏–∑: {place_birth} | –ñ–∏–≤—ë—Ç: {place_live}\n"
        "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: {education}\n"
        "–†–∞–±–æ—Ç–∞: {job} ({org})\n"
        "–í–Ω–µ—à–Ω–æ—Å—Ç—å: {appearance}\n"
        "–•–∞—Ä–∞–∫—Ç–µ—Ä: {character}\n"
        "–•–æ–±–±–∏: {hobby}\n"
        "–î–µ—Ç—Å—Ç–≤–æ: {childhood}\n"
        "–Æ–Ω–æ—Å—Ç—å: {youth}\n"
        "–í–∑—Ä–æ—Å–ª–∞—è –∂–∏–∑–Ω—å: {adultlife}\n"
    ),
}

DEFAULT_TEMPLATE = (
    "<b>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</b> {name} {surname}\n"
    "<b>–ü–æ–ª:</b> {gender}\n"
    "<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}\n"
    "<b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b> {nationality}\n"
    "<b>–°–µ–º—å—è:</b> {family}\n"
    "<b>–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {place_birth}\n"
    "<b>–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:</b> {place_live}\n"
    "<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {education}\n"
    "<b>–†–∞–±–æ—Ç–∞:</b> {job} ({org})\n"
    "<b>–í–Ω–µ—à–Ω–æ—Å—Ç—å:</b> {appearance}\n"
    "<b>–•–∞—Ä–∞–∫—Ç–µ—Ä:</b> {character}\n"
    "<b>–•–æ–±–±–∏:</b> {hobby}\n"
    "<b>–î–µ—Ç—Å—Ç–≤–æ:</b> {childhood}\n"
    "<b>–Æ–Ω–æ—Å—Ç—å:</b> {youth}\n"
    "<b>–í–∑—Ä–æ—Å–ª–∞—è –∂–∏–∑–Ω—å:</b> {adultlife}\n"
)

PHOTO_SERVERS = ["Orange", "Blue"]

bot = Bot(
    token=API_TOKEN,
    default=DefaultBotProperties(parse_mode=ParseMode.HTML)
)
dp = Dispatcher()
router = Router()
user_states = {}

def main_menu():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üìù –ù–∞–ø–∏—Å–∞—Ç—å –†–ü –±–∏–æ–≥—Ä–∞—Ñ–∏—é"))
    kb.add(KeyboardButton("üì¨ –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º"))
    return kb

def servers_menu():
    kb = InlineKeyboardMarkup(row_width=2)
    for srv in ['Red', 'Green', 'Blue', 'Yellow', 'Orange', 'Purple', 'Lime', 'Pink', 'Cherry', 'Black']:
        kb.add(InlineKeyboardButton(text=srv, callback_data=f"server_{srv}"))
    return kb

@router.message(Command("start", "menu"))
async def cmd_start(message: Message):
    user_states.pop(message.from_user.id, None)
    text = (
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RP Bio –ë–æ—Ç!</b>\n\n"
        "üìñ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é RP-–±–∏–æ–≥—Ä–∞—Ñ–∏—é –¥–ª—è –ª—é–±–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞.\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    )
    await message.answer(text, reply_markup=main_menu())

@router.message(F.text == "üìù –ù–∞–ø–∏—Å–∞—Ç—å –†–ü –±–∏–æ–≥—Ä–∞—Ñ–∏—é")
async def write_bio(message: Message):
    user_states[message.from_user.id] = {"step": "choose_server"}
    await message.answer(
        "üåê <b>–í—ã–±–µ—Ä–∏ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–≤–æ–µ–π –±–∏–æ–≥—Ä–∞—Ñ–∏–∏:</b>",
        reply_markup=servers_menu()
    )

@router.message(F.text == "üì¨ –°–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º")
async def contact_author(message: Message):
    text = (
        "üí¨ <b>–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —Å –∞–≤—Ç–æ—Ä–æ–º</b>\n\n"
        "–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? –ü–∏—à–∏ –≤ Telegram: "
        "<a href='https://t.me/bunkoc'>@bunkoc</a>\n\n"
        "üåü –ê–≤—Ç–æ—Ä –≤—Å–µ–≥–¥–∞ —Ä–∞–¥ –Ω–æ–≤—ã–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º –∏ –∏–¥–µ—è–º! "
        "–í–æ–∑–º–æ–∂–Ω–æ, –∏–º–µ–Ω–Ω–æ —Ç–≤–æ—è –º—ã—Å–ª—å —Å–¥–µ–ª–∞–µ—Ç –±–æ—Ç–∞ –µ—â—ë –∫—Ä—É—á–µ üöÄ"
    )
    await message.answer(text, disable_web_page_preview=True)

@router.callback_query(F.data.startswith("server_"))
async def handle_server_choice(call: CallbackQuery):
    server = call.data.replace("server_", "")
    user_states[call.from_user.id] = {"step": "ask_name", "server": server}
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ <b>–ò–º—è</b> –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")
    await call.answer()

@router.message(lambda m: user_states.get(m.from_user.id, {}).get("step") == "ask_name")
async def ask_surname(message: Message):
    user_states[message.from_user.id]["name"] = message.text.strip()
    user_states[message.from_user.id]["step"] = "ask_surname"
    await message.answer("–í–≤–µ–¥–∏—Ç–µ <b>–§–∞–º–∏–ª–∏—é</b> –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")

@router.message(lambda m: user_states.get(m.from_user.id, {}).get("step") == "ask_surname")
async def ask_age(message: Message):
    user_states[message.from_user.id]["surname"] = message.text.strip()
    user_states[message.from_user.id]["step"] = "ask_age"
    await message.answer("–í–≤–µ–¥–∏—Ç–µ <b>–í–æ–∑—Ä–∞—Å—Ç</b> –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:")

@router.message(lambda m: user_states.get(m.from_user.id, {}).get("step") == "ask_age")
async def ask_gender(message: Message):
    user_states[message.from_user.id]["age"] = message.text.strip()
    user_states[message.from_user.id]["step"] = "ask_gender"
    kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb.add("–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ <b>–ü–æ–ª</b> –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", reply_markup=kb)

@router.message(lambda m: user_states.get(m.from_user.id, {}).get("step") == "ask_gender")
async def ask_nationality(message: Message):
    user_states[message.from_user.id]["gender"] = message.text.strip()
    user_states[message.from_user.id]["step"] = "ask_nationality"
    await message.answer("–í–≤–µ–¥–∏—Ç–µ <b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å</b> –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:", reply_markup=ReplyKeyboardRemove())

@router.message(lambda m: user_states.get(m.from_user.id, {}).get("step") == "ask_nationality")
async def generate_full_bio(message: Message):
    user_states[message.from_user.id]["nationality"] = message.text.strip()
    data = user_states.pop(message.from_user.id)
    text = generate_bio(data)
    await message.answer(text, reply_markup=main_menu())
    if data["server"] in PHOTO_SERVERS:
        await message.answer("üì∏ <b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–≤–æ—ë —Ñ–æ—Ç–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –±–∏–æ–≥—Ä–∞—Ñ–∏–∏.</b>")

def generate_bio(data):
    name = data["name"]
    surname = data["surname"]
    age = data["age"]
    gender = data["gender"]
    nationality = data["nationality"]
    server = data["server"]
    family = random.choice(FAMILY_SAMPLES)
    place_birth = random.choice(PLACES)
    place_live = random.choice(PLACES)
    education = random.choice(EDUCATION_SAMPLES)
    job = random.choice(JOBS)
    org = random.choice(ORGS)
    appearance = random.choice(APPEARANCE_SAMPLES)
    character = ", ".join(random.sample(CHARACTERS, 3))
    hobby = ", ".join(random.sample(HOBBIES, 3))
    childhood = random.choice(CHILDHOOD_SAMPLES)
    youth = random.choice(YOUTH_SAMPLES)
    adultlife = random.choice(ADULT_LIFE_SAMPLES)
    template = BIO_TEMPLATES.get(server, DEFAULT_TEMPLATE)
    bio = template.format(
        name=name,
        surname=surname,
        age=age,
        gender=gender,
        nationality=nationality,
        family=family,
        place_birth=place_birth,
        place_live=place_live,
        education=education,
        job=job,
        org=org,
        appearance=appearance,
        character=character,
        hobby=hobby,
        childhood=childhood,
        youth=youth,
        adultlife=adultlife,
    )
    return f"üìÑ <b>RP-–±–∏–æ–≥—Ä–∞—Ñ–∏—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {server}:</b>\n\n{bio}"

@router.message()
async def fallback(message: Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é ‚¨áÔ∏è", reply_markup=main_menu())

async def main():
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
