import os
import random
import logging
import getpass
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

logging.basicConfig(level=logging.INFO)

TELEGRAM_TOKEN = "8124119601:AAEgnFwCalzIKU15uHpIyWlCRbu4wvNEAUw"
if not TELEGRAM_TOKEN:
    TELEGRAM_TOKEN = getpass.getpass("–í–≤–µ–¥–∏—Ç–µ TELEGRAM_TOKEN: ")

bot = Bot(token=TELEGRAM_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

menu_kb = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –†–ü-–±–∏–æ–≥—Ä–∞—Ñ–∏—é")]],
    resize_keyboard=True,
)

class BioStates(StatesGroup):
    waiting_fio = State()
    waiting_age = State()
    waiting_nationality = State()

# ----------------- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –†–ü-–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏ ------------------

def generate_bio(data: dict) -> str:
    # –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    fio = data.get("fio", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    age = data.get("age", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    nationality = data.get("nationality", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ —Å–ª—É—á–∞–π–Ω–æ ‚Äî –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –≤–æ–ø—Ä–æ—Å–æ–≤
    gender = random.choice(["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"])
    photo = "–§–æ—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    city_list = ["–ê—Ä–∑–∞–º–∞—Å", "–ë—É—Å–∞–µ–≤–æ", "–Æ–∂–Ω—ã–π", "–õ—ã—Ç–∫–∞—Ä–∏–Ω–æ", "–ú–æ—Ä—Å–∫–æ–µ", "–ë–∞—Ç—ã—Ä–µ–≤–æ", "–ì–æ—Ä–∫–∏", "–ù–æ–≤—ã–π –ê—Ä–∑–∞–º–∞—Å"]
    city = random.choice(city_list)
    edu_list = [
        "–°—Ä–µ–¥–Ω–µ–µ –æ–±—â–µ–µ", "–°—Ä–µ–¥–Ω–µ-—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ", "–í—ã—Å—à–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–µ", "–í—ã—Å—à–µ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ", "–ü–¢–£", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ª–∏—Ü–µ–π"
    ]
    education = random.choice(edu_list)
    army_status = random.choice([
        "–û—Ç—Å–ª—É–∂–∏–ª —Å—Ä–æ—á–Ω—É—é —Å–ª—É–∂–±—É.", "–ü—Ä–æ—Ö–æ–¥–∏–ª —Å–ª—É–∂–±—É, —É–≤–æ–ª–µ–Ω –≤ –∑–∞–ø–∞—Å.", "–ù–µ —Å–ª—É–∂–∏–ª –ø–æ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–∏—á–∏–Ω–µ.",
        "–ü—Ä–æ—Ö–æ–¥–∏–ª –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≥—Ä–∞–∂–¥–∞–Ω—Å–∫—É—é —Å–ª—É–∂–±—É."
    ])
    family = random.choice([
        "–û—Ç–µ—Ü ‚Äî –°–µ—Ä–≥–µ–π, –º–∞—Ç—å ‚Äî –ú–∞—Ä–∏–Ω–∞. –ë—Ä–∞—Ç—å–µ–≤ –∏ —Å–µ—Å—Ç–µ—Ä –Ω–µ—Ç.",
        "–°–µ–º—å—è –ø–æ–ª–Ω–∞—è: —Ä–æ–¥–∏—Ç–µ–ª–∏ –∏ –º–ª–∞–¥—à–∞—è —Å–µ—Å—Ç—Ä–∞.",
        "–û—Ç–µ—Ü ‚Äî –≤–µ—Ç–µ—Ä–∞–Ω –ú–í–î, –º–∞—Ç—å ‚Äî —É—á–∏—Ç–µ–ª—å–Ω–∏—Ü–∞. –ï—Å—Ç—å —Å—Ç–∞—Ä—à–∏–π –±—Ä–∞—Ç.",
        "–ú–∞—Ç—å ‚Äî –¥–æ–º–æ—Ö–æ–∑—è–π–∫–∞, –æ—Ç–µ—Ü ‚Äî –≤–æ–¥–∏—Ç–µ–ª—å. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Ä–µ–±—ë–Ω–æ–∫."
    ])
    parent_address = city
    appearance = random.choice([
        "–°–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ, —Ä–æ—Å—Ç 180 —Å–º, –≤–æ–ª–æ—Å—ã —Ç—ë–º–Ω—ã–µ, –≥–ª–∞–∑–∞ –∫–∞—Ä–∏–µ.",
        "–°—Ä–µ–¥–Ω–µ–≥–æ —Ä–æ—Å—Ç–∞, –∫—Ä–µ–ø–∫–æ–µ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ, –≥–æ–ª—É–±—ã–µ –≥–ª–∞–∑–∞, –∫–æ—Ä–æ—Ç–∫–∞—è —Å—Ç—Ä–∏–∂–∫–∞.",
        "–ö—Ä—É–ø–Ω–æ–≥–æ —Ç–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏—è, —Å–≤–µ—Ç–ª—ã–µ –≤–æ–ª–æ—Å—ã, —Å–µ—Ä–æ-–∑–µ–ª—ë–Ω—ã–µ –≥–ª–∞–∑–∞.",
        "–†–æ—Å—Ç 175 —Å–º, —Ç—ë–º–Ω—ã–µ –≤–æ–ª–æ—Å—ã, –∞–∫–∫—É—Ä–∞—Ç–Ω–∞—è –±–æ—Ä–æ–¥–∞, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –±—Ä–æ–≤–∏."
    ])
    character = random.choice([
        "–°–ø–æ–∫–æ–π–Ω—ã–π, —Ä–∞—Å—Å—É–¥–∏—Ç–µ–ª—å–Ω—ã–π, —Ç—Ä—É–¥–æ–ª—é–±–∏–≤—ã–π, –Ω–æ —É–º–µ–µ—Ç –ø–æ—Å—Ç–æ—è—Ç—å –∑–∞ —Å–µ–±—è.",
        "–î–æ–±—Ä—ã–π, –º–∏—Ä–æ–ª—é–±–∏–≤—ã–π, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π, —Ö—Ä–∞–±—Ä—ã–π, —Å–º–µ—à–Ω–æ–π, –∞–º–±–∏—Ü–∏–æ–∑–Ω—ã–π.",
        "–°–¥–µ—Ä–∂–∞–Ω–Ω—ã–π, –Ω–∞–¥—ë–∂–Ω—ã–π, –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π, –Ω–µ –ª–µ–∑—É –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –ø–µ—Ä–≤—ã–º.",
        "–£–º–Ω—ã–π, —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω—ã–π, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–π, –≤–µ–ª–∏–∫–æ–¥—É—à–Ω—ã–π, –≤–µ–∂–ª–∏–≤—ã–π."
    ])
    marital_status = random.choice([
        "–ù–µ –∂–µ–Ω–∞—Ç.", "–í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.", "–ñ–µ–Ω–∞—Ç.", "–†–∞–∑–≤–µ–¥—ë–Ω."
    ])
    current_address = city
    is_convicted = random.choice([
        "–ù–µ—Ç, –Ω–µ –∏–º–µ—é.", "–ù–µ—Ç.", "–ù–µ —Å—É–¥–∏–º.", "–°—É–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç."
    ])
    hobbies = random.choice([
        "–§—É—Ç–±–æ–ª, –±–∞—Å–∫–µ—Ç–±–æ–ª, –≤–∏–¥–µ–æ–∏–≥—Ä—ã.", "–ß—Ç–µ–Ω–∏–µ –±–∏–æ–≥—Ä–∞—Ñ–∏–π, —à–∞—Ö–º–∞—Ç—ã, –ø–ª–∞–≤–∞–Ω–∏–µ.",
        "–ë–æ–∫—Å, —Å—Ç—Ä–µ–ª—å–±–∞, –∫—Ä–æ—Å—Å—Ñ–∏—Ç, —Ä—ã–±–∞–ª–∫–∞.", "–ï–¥–∏–Ω–æ–±–æ—Ä—Å—Ç–≤–∞, –∞–≤—Ç–æ–º–æ–±–∏–ª–∏, –ø–æ—Ö–æ–¥—ã –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É."
    ])

    # --- –®–∞–±–ª–æ–Ω—ã –¥–ª—è –î–µ—Ç—Å—Ç–≤–∞ ---
    childhood_blocks = [
        f"–Ø —Ä–æ–¥–∏–ª—Å—è –∏ –≤—ã—Ä–æ—Å –≤ –≥–æ—Ä–æ–¥–µ {city}, –æ–¥–Ω–æ–º –∏–∑ –∫–ª—é—á–µ–≤—ã—Ö —Ü–µ–Ω—Ç—Ä–æ–≤ –º–∏—Ä–∞ Black Russia. –° —Ä–∞–Ω–Ω–∏—Ö –ª–µ—Ç –º–µ–Ω—è –æ–∫—Ä—É–∂–∞–ª–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –±–æ–ª—å—à–æ–≥–æ –≥–æ—Ä–æ–¥–∞ ‚Äî —à—É–º —É–ª–∏—Ü, –æ–∂–∏–≤–ª—ë–Ω–Ω—ã–µ —Ä—ã–Ω–∫–∏, –¥–≤–æ—Ä–æ–≤—ã–µ –±–∞—Ç–∞–ª–∏–∏.",
        "–ú–æ–∏ —Ä–æ–¥–∏—Ç–µ–ª–∏ –≤—Å–µ–≥–¥–∞ —Å—Ç–∞—Ä–∞–ª–∏—Å—å –ø—Ä–∏–≤–∏—Ç—å –º–Ω–µ —Ç—Ä—É–¥–æ–ª—é–±–∏–µ –∏ —É–≤–∞–∂–µ–Ω–∏–µ –∫ –æ–∫—Ä—É–∂–∞—é—â–∏–º. –Ø –ø–æ–º–æ–≥–∞–ª –ø–æ –¥–æ–º—É, —É—á–∏–ª—Å—è –≥–æ—Ç–æ–≤–∏—Ç—å, –∞ –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –ø—Ä–æ–ø–∞–¥–∞–ª –≤–æ –¥–≤–æ—Ä–µ —Å –¥—Ä—É–∑—å—è–º–∏.",
        "–° –º–∞–ª—ã—Ö –ª–µ—Ç —è –ø—Ä–æ—è–≤–ª—è–ª –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–µ—Ö–Ω–∏–∫–µ ‚Äî —Ä–∞–∑–±–∏—Ä–∞–ª —Å—Ç–∞—Ä—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã, —Å–æ–±–∏—Ä–∞–ª –º–æ–¥–µ–ª–∏ –º–∞—à–∏–Ω –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –º–µ—Å—Ç–Ω—ã—Ö –∫–æ–Ω–∫—É—Ä—Å–∞—Ö.",
        "–î–µ—Ç—Å—Ç–≤–æ –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç—ã–º, –Ω–æ —Ç—ë–ø–ª—ã–º: –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Å–∫—Ä–æ–º–Ω—ã–µ –¥–æ—Ö–æ–¥—ã —Å–µ–º—å–∏, —É –Ω–∞—Å –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –º–µ—Å—Ç–æ –¥–ª—è –∑–∞–±–æ—Ç—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏.",
        "–û—Ç–µ—Ü —á–∞—Å—Ç–æ –±—Ä–∞–ª –º–µ–Ω—è —Å —Å–æ–±–æ–π –Ω–∞ —Ä—ã–±–∞–ª–∫—É –∏–ª–∏ –æ—Ö–æ—Ç—É –∑–∞ –≥–æ—Ä–æ–¥. –¢–∞–º —è —É—á–∏–ª—Å—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏, —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —É–≤–∞–∂–µ–Ω–∏—é –∫ –ø—Ä–∏—Ä–æ–¥–µ.",
        "–í —à–∫–æ–ª–µ —è –ø—Ä–æ—è–≤–ª—è–ª —Å–µ–±—è –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–Ω–∏–∫ ‚Äî —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –æ–ª–∏–º–ø–∏–∞–¥–∞—Ö –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –∏ –û–ë–ñ, –±—ã–ª –∫–∞–ø–∏—Ç–∞–Ω–æ–º –¥–≤–æ—Ä–æ–≤–æ–π —Ñ—É—Ç–±–æ–ª—å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.",
        "–ú–µ—á—Ç–∞–ª —Å—Ç–∞—Ç—å –ø–æ–ª–∏—Ü–µ–π—Å–∫–∏–º –∏–ª–∏ –±–∏–∑–Ω–µ—Å–º–µ–Ω–æ–º, –Ω–∞–±–ª—é–¥–∞—è –∑–∞ –∂–∏–∑–Ω—å—é –≤–∑—Ä–æ—Å–ª—ã—Ö –≤ –Ω–∞—à–µ–º —Ä–∞–π–æ–Ω–µ. –ß–∞—Å—Ç–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–ª —Å–µ–±—è –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è.",
        "–õ—é–±–∏–ª —á–∏—Ç–∞—Ç—å –∫–Ω–∏–≥–∏ –æ –≥–µ—Ä–æ—è—Ö Black Russia, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—è—Å—å –∏—Ö –∏—Å—Ç–æ—Ä–∏—è–º–∏ –∏ –º–µ—á—Ç–∞—è –æ —Å–≤–æ–∏—Ö –ø–æ–¥–≤–∏–≥–∞—Ö."
    ]

    # --- –®–∞–±–ª–æ–Ω—ã –¥–ª—è –Æ–Ω–æ—Å—Ç–∏ ---
    youth_blocks = [
        f"–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è —à–∫–æ–ª—ã –ø–æ—Å—Ç—É–ø–∏–ª –≤ {random.choice(['–∫–æ–ª–ª–µ–¥–∂', '—Ç–µ—Ö–Ω–∏–∫—É–º', '—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç'])} –≤ –≥–æ—Ä–æ–¥–µ {city} –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ '{education.lower()}'.",
        "–í —é–Ω–æ—Å—Ç–∏ –Ω–∞—á–∞–ª –ø–æ–¥—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å: —Å–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–Ω–æ—Å–∏–ª –≥–∞–∑–µ—Ç—ã, –∑–∞—Ç–µ–º —É—Å—Ç—Ä–æ–∏–ª—Å—è –≤ –∞–≤—Ç–æ–º–∞—Å—Ç–µ—Ä—Å–∫—É—é –∏ –¥–∞–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª —Å–µ–±—è –≤ –¥–æ—Å—Ç–∞–≤–∫–µ –ø–∏—Ü—Ü—ã.",
        "–°–µ—Ä—å—ë–∑–Ω–æ —É–≤–ª—ë–∫—Å—è —Å–ø–æ—Ä—Ç–æ–º ‚Äî –ø–æ—Å–µ—â–∞–ª —Å–µ–∫—Ü–∏—é –±–æ–∫—Å–∞ –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö.",
        f"–í 18 –ª–µ—Ç –ø–æ—à—ë–ª —Å–ª—É–∂–∏—Ç—å ‚Äî –∞—Ä–º–∏—è Black Russia –∑–∞–∫–∞–ª–∏–ª–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä, –Ω–∞—É—á–∏–ª–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –∏ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏—è –≤ —Å–ª–æ–∂–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö.",
        "–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å —É—á—ë–±–æ–π –Ω–∞—á–∞–ª –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º: —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö, –ø—Ä–æ–±–æ–≤–∞–ª –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –Ω–µ–±–æ–ª—å—à–æ–π –±–∏–∑–Ω–µ—Å.",
        "–í—Å—Ç—É–ø–∏–ª –≤–æ —Ñ—Ä–∞–∫—Ü–∏—é ‚Äî —Å–Ω–∞—á–∞–ª–∞ –æ–±—ã—á–Ω—ã–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º, –∞ —Å–ø—É—Å—Ç—è –ø–∞—Ä—É –ª–µ—Ç —Å—Ç–∞–ª –∑–∞–º–µ—Å—Ç–∏—Ç–µ–ª–µ–º –ª–∏–¥–µ—Ä–∞. –≠—Ç–æ—Ç –æ–ø—ã—Ç –¥–∞–ª –º–Ω–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–∞—Å—Ç–æ—è—â–µ–π –∫–æ–º–∞–Ω–¥–Ω–æ–π —Ä–∞–±–æ—Ç—ã.",
        "–í —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Å—Ç–æ–º, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞–ª –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ RP-–∞–∫—Ü–∏—è—Ö –∏ –∫–æ–º–∞–Ω–¥–Ω—ã—Ö –∫–≤–µ—Å—Ç–∞—Ö.",
        "–£—á—ë–±–∞ –±—ã–ª–∞ –Ω–µ–ø—Ä–æ—Å—Ç–æ–π, –Ω–æ —è —Å–ø—Ä–∞–≤–ª—è–ª—Å—è: –¥–Ω—ë–º ‚Äî –ª–µ–∫—Ü–∏–∏, –≤–µ—á–µ—Ä–æ–º ‚Äî –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞, –Ω–æ—á—å—é ‚Äî –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º."
    ]

    # --- –®–∞–±–ª–æ–Ω—ã –¥–ª—è –ù–∞—Å—Ç–æ—è—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ ---
    present_blocks = [
        f"–°–µ–π—á–∞—Å –º–Ω–µ {age} –ª–µ—Ç, –∏ —è –∂–∏–≤—É –≤ –≥–æ—Ä–æ–¥–µ {current_address}. –†–∞–±–æ—Ç–∞—é –ø–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ‚Äî {education.lower()}, —Ä–∞–∑–≤–∏–≤–∞—é—Å—å –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.",
        "–°–ª—É–∂—É –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ (–ú–í–î/–ê—Ä–º–∏—è/–û–ü–ì/–ë–∏–∑–Ω–µ—Å) Black Russia, —É—á–∞—Å—Ç–≤—É—é –≤ –æ–ø–µ—Ä–∞—Ü–∏—è—Ö, RP-—Å—Ü–µ–Ω–∞—Ä–∏—è—Ö, –≤—ã–ø–æ–ª–Ω—è—é –∑–∞–¥–∞–Ω–∏—è –ª–∏–¥–µ—Ä–∞.",
        "–í —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–Ω–∏–º–∞—é—Å—å —Å–ø–æ—Ä—Ç–æ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é —Ñ–∏–∑–∏—á–µ—Å–∫—É—é —Ñ–æ—Ä–º—É, —Å–ª–µ–∂—É –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ —Å–µ—Ä–≤–µ—Ä–∞.",
        "–ü–ª–∞–Ω–∏—Ä—É—é –æ—Ç–∫—Ä—ã—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –±–∏–∑–Ω–µ—Å –∏–ª–∏ –∑–∞–Ω—è—Ç—å –ª–∏–¥–µ—Ä—Å–∫—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏.",
        "–õ—é–±–ª—é –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤—Ä–µ–º—è —Å –¥—Ä—É–∑—å—è–º–∏ ‚Äî –≤–º–µ—Å—Ç–µ —É—á–∞—Å—Ç–≤—É–µ–º –≤ —Ä–µ–π–¥–∞—Ö, –∫–≤–µ—Å—Ç–∞—Ö –∏ RP-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö.",
        "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ —É—á—É—Å—å –Ω–æ–≤–æ–º—É: –ø—Ä–æ—Ö–æ–∂—É –∫—É—Ä—Å—ã, –∏–∑—É—á–∞—é —ç–∫–æ–Ω–æ–º–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞, –æ—Å–≤–∞–∏–≤–∞—é –Ω–æ–≤—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.",
        "–ü–æ–º–æ–≥–∞—é –Ω–æ–≤–∏—á–∫–∞–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –¥–µ–ª—é—Å—å –æ–ø—ã—Ç–æ–º, —É—á–∞—Å—Ç–≤—É—é –≤ –∂–∏–∑–Ω–∏ —Ä–∞–π–æ–Ω–∞.",
        "–í–µ—Ä—é, —á—Ç–æ –≤–ø–µ—Ä–µ–¥–∏ –º–µ–Ω—è –∂–¥—ë—Ç –µ—â—ë –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –≤ –º–∏—Ä–µ Black Russia."
    ]

    # –ì–∞—Ä–∞–Ω—Ç–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç–∏: —Å–ª—É—á–∞–π–Ω–æ–µ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ –∏ –≤—ã–±–æ—Ä 5‚Äì6 –±–ª–æ–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞ (–º–æ–∂–µ—à—å –º–µ–Ω—è—Ç—å —á–∏—Å–ª–æ)
    childhood = "\n".join(random.sample(childhood_blocks, k=6))
    youth = "\n".join(random.sample(youth_blocks, k=6))
    present = "\n".join(random.sample(present_blocks, k=6))

    # –ò—Ç–æ–≥–æ–≤–∞—è –±–∏–æ–≥—Ä–∞—Ñ–∏—è ‚Äî —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    result = (
        f"<b>–§–ò–û:</b> {fio}\n"
        f"<b>–ü–æ–ª:</b> {gender}\n"
        f"<b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> –ù–µ —É–∫–∞–∑–∞–Ω–∞\n"
        f"<b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}\n"
        f"<b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:</b> {nationality}\n"
        f"<b>–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {city}\n"
        f"<b>–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ:</b> {education}\n"
        f"<b>–û—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –≤–æ–∏–Ω—Å–∫–æ–π —Å–ª—É–∂–±–µ:</b> {army_status}\n"
        f"<b>–°–µ–º—å—è:</b> {family}\n"
        f"<b>–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –Ω–∞ –º–æ–º–µ–Ω—Ç –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è —Å —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏:</b> {parent_address}\n"
        f"<b>–û–ø–∏—Å–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏:</b> {appearance}\n"
        f"<b>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞:</b> {character}\n"
        f"<b>–í–∞—à–µ —Ñ–æ—Ç–æ:</b> {photo}\n\n"
        f"<b>–î–µ—Ç—Å—Ç–≤–æ:</b>\n{childhood}\n\n"
        f"<b>–Æ–Ω–æ—Å—Ç—å:</b>\n{youth}\n\n"
        f"<b>–ù–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è:</b>\n{present}\n\n"
        f"<b>–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ:</b> {marital_status}\n"
        f"<b>–ú–µ—Å—Ç–æ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:</b> {current_address}\n"
        f"<b>–ò–º–µ–µ—Ç—Å—è –ª–∏ —Å—É–¥–∏–º–æ—Å—Ç—å?:</b> {is_convicted}\n"
        f"<b>–í–∞—à–µ —Ö–æ–±–±–∏:</b> {hobbies}"
    )
    return result

# ----------------- –•–µ–Ω–¥–ª–µ—Ä—ã ------------------

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    text = (
        "üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RP Biography Bot!</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ <b>—Å–æ–∑–¥–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—É—é RP-–±–∏–æ–≥—Ä–∞—Ñ–∏—é</b> –¥–ª—è –º–∏—Ä–∞ <b>Black Russia</b> –ø–æ –≤—Å–µ–º –ø—Ä–∞–≤–∏–ª–∞–º —Å–µ—Ä–≤–µ—Ä–∞.\n"
        "–ë–æ—Ç –∑–∞–¥–∞—Å—Ç —Ç–µ–±–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ —Å–æ–±–µ—Ä—ë—Ç –∞–Ω–∫–µ—Ç—É ‚Äî –∞ –¥–∞–ª—å—à–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é, –≥—Ä–∞–º–æ—Ç–Ω—É—é –±–∏–æ–≥—Ä–∞—Ñ–∏—é —Ç–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.\n\n"
        "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å:"
    )
    await message.answer(text, reply_markup=menu_kb, parse_mode="HTML")

@dp.message(lambda m: m.text == "üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –†–ü-–±–∏–æ–≥—Ä–∞—Ñ–∏—é")
async def start_bio(message: types.Message, state: FSMContext):
    await state.set_state(BioStates.waiting_fio)
    await message.answer(
        "<b>1Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –§–ò–û –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>\n\n"
        "–ü—Ä–∏–º–µ—Ä: <i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>\n"
        "–ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±–µ–∑ –Ω–∏–∂–Ω–∏—Ö –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–π.",
        parse_mode="HTML"
    )

@dp.message(BioStates.waiting_fio)
async def bio_fio(message: types.Message, state: FSMContext):
    fio = message.text.strip()
    if "_" in fio or not all(x.isalpha() or x.isspace() for x in fio):
        await message.answer(
            "‚ö†Ô∏è <b>–§–ò–û –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ, –±–µ–∑ –Ω–∏–∂–Ω–∏—Ö –ø–æ–¥—á—ë—Ä–∫–∏–≤–∞–Ω–∏–π –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤.</b>\n"
            "–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.\n"
            "–ü—Ä–∏–º–µ—Ä: <i>–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>",
            parse_mode="HTML"
        )
        return
    await state.update_data(fio=fio)
    await state.set_state(BioStates.waiting_age)
    await message.answer(
        "<b>2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>\n"
        "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç <b>18</b> –¥–æ <b>65</b> –ª–µ—Ç.",
        parse_mode="HTML"
    )

@dp.message(BioStates.waiting_age)
async def bio_age(message: types.Message, state: FSMContext):
    try:
        age = int(message.text.strip())
        if age < 18 or age > 65:
            raise ValueError
    except ValueError:
        await message.answer(
            "‚ö†Ô∏è <b>–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º –æ—Ç 18 –¥–æ 65.</b>\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.",
            parse_mode="HTML"
        )
        return
    await state.update_data(age=age)
    await state.set_state(BioStates.waiting_nationality)
    await message.answer(
        "<b>3Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:</b>\n"
        "–ü—Ä–∏–º–µ—Ä: <i>–†—É—Å—Å–∫–∏–π, –¢–∞—Ç–∞—Ä–∏–Ω, –ê—Ä–º—è–Ω–∏–Ω, –ß–µ—á–µ–Ω–µ—Ü, –ò—Ç–∞–ª—å—è–Ω–µ—Ü –∏ —Ç.–ø.</i>",
        parse_mode="HTML"
    )

@dp.message(BioStates.waiting_nationality)
async def bio_nationality(message: types.Message, state: FSMContext):
    nationality = message.text.strip().capitalize()
    await state.update_data(nationality=nationality)
    data = await state.get_data()
    bio_text = generate_bio(data)
    await message.answer(
        "<b>–í–∞—à–∞ —É–Ω–∏–∫–∞–ª—å–Ω–∞—è RP-–±–∏–æ–≥—Ä–∞—Ñ–∏—è:</b>\n\n" + bio_text,
        parse_mode="HTML"
    )
    await state.clear()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import sys
    if sys.platform == "win32":
        asyncio.set_event_loop_policy(asyncio.WindowsSelectorEventLoopPolicy())
    asyncio.run(main())
